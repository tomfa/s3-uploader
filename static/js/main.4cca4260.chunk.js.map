{"version":3,"sources":["lib/utils.js","components/FileDrop.js","components/FileList.js","lib/aws/auth.js","lib/aws/s3.js","components/StorageSelector.js","components/KeyInput.js","components/Destination.js","App.js","serviceWorker.js","index.js"],"names":["encodeJSONtob64","data","Buffer","from","JSON","stringify","toString","replaceAll","str","search","replacement","split","join","toDate","time","Date","toISOString","replace","toTime","substring","getQueryParams","urlParams","URLSearchParams","window","location","keys","params","key","get","StyledDrop","styled","div","props","isActive","FileDrop","setFiles","onDrop","useCallback","droppedFiles","map","file","uploaded","useDropzone","getRootProps","getInputProps","isDragActive","ListItem","li","Spinner","loading","FileList","files","length","path","hmac","string","encoding","crypto","createHmac","update","digest","getCredentials","region","accessKey","expiryDate","generatePolicy","bucket","credentials","prefix","designatedId","conditions","push","policy","expiration","utils","getS3UploadSignature","secretKey","service","stringToSign","h1","h2","h3","h4","createSignature","doFileUpload","a","fileObj","signature","acl","API_URL","payload","type","Policy","formData","FormData","append","fetch","method","body","uploadFile","destination","isPublic","today","tomorrow","setDate","getDate","auth","Selector","select","StorageSelector","destinations","selectDestination","onChange","ev","target","value","d","InputWrapper","Label","label","KeyInput","placeholder","currentValue","setKey","htmlFor","Destination","Body","Panel","uploadSingleFile","buildDestinationFromString","bucketString","App","useState","setLoading","setDestinations","chosenDestination","setChosenDestination","setAccessKey","setSecretKey","useEffect","buckets","parsedDestinations","filter","console","log","newFiles","oldFiles","Promise","all","item","className","bucketKey","find","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cca4260.chunk.js","sourcesContent":["const decodeJSONfromb64 = base64String =>\n  JSON.parse(Buffer.from(base64String, 'base64').toString());\n\nconst encodeJSONtob64 = data =>\n  Buffer.from(JSON.stringify(data)).toString('base64');\n\nconst replaceAll = (str, search, replacement) =>\n  str.split(search).join(replacement);\n\nfunction toTime(time) {\n  return new Date(time).toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n}\n\nfunction toDate(time, stripDash = true) {\n  if (!stripDash) {\n    return new Date(time).toISOString().substring(0, 10);\n  }\n  return toTime(time).substring(0, 8);\n}\n\nconst getQueryParams = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const keys = urlParams.keys();\n  const params = {};\n  for (const key of keys) {\n    params[key] = urlParams.get(key);\n  }\n  return params;\n};\n\nexport {\n  decodeJSONfromb64,\n  encodeJSONtob64,\n  replaceAll,\n  toDate,\n  toTime,\n  getQueryParams,\n};\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst StyledDrop = styled.div`\n  padding: 20px;\n  background-color: ${props => (props.isActive ? '#BAE9AE' : '#ece9e9')};\n  cursor: pointer;\n`;\n\nconst FileDrop = ({ setFiles }) => {\n  const onDrop = useCallback(\n    droppedFiles =>\n      setFiles(\n        droppedFiles.map(file => {\n          file.uploaded = false;\n          return file;\n        }),\n      ),\n    [setFiles],\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <StyledDrop isActive={isDragActive} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <span>Drop the files here ...</span>\n      ) : (\n        <span>Click or Drag and drop files here</span>\n      )}\n    </StyledDrop>\n  );\n};\n\nexport { FileDrop };\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n  padding: 5px 0;\n  list-style: none;\n`;\n\nconst Spinner = ({ loading }) => (loading ? <p>Loading...</p> : <Fragment />);\n\nconst FileList = ({ files, loading }) => {\n  if (files.length === 0) {\n    return <Spinner loading={loading} />;\n  }\n  return (\n    <Fragment>\n      <Spinner loading={loading} />\n      <ul>\n        {files.map(file => (\n          <ListItem key={file.path}>\n            {file.path}\n            {file.uploaded ? '– Uploaded' : ''}\n          </ListItem>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport { FileList };\n","import * as utils from '../utils';\nimport crypto from 'crypto';\nimport { replaceAll } from '../utils';\nimport { toDate } from '../utils';\n\nfunction hmac(key, string, encoding) {\n  return crypto\n    .createHmac('sha256', key)\n    .update(string, 'utf8')\n    .digest(encoding);\n}\n\nconst getCredentials = ({ region, accessKey, expiryDate }) =>\n  `${accessKey}/${replaceAll(expiryDate, '-', '')}/${region}/s3/aws4_request`;\n\nconst generatePolicy = ({\n  bucket,\n  credentials,\n  expiryDate,\n  prefix,\n  designatedId = null,\n}) => {\n  const conditions = [\n    { bucket: bucket },\n    ['starts-with', '$key', prefix],\n    ['starts-with', '$content-type', ''],\n    ['starts-with', '$acl', ''],\n    { 'x-amz-server-side-encryption': 'AES256' },\n    { 'x-amz-credential': credentials },\n\n    { 'x-amz-algorithm': 'AWS4-HMAC-SHA256' },\n    {\n      'x-amz-date': `${replaceAll(expiryDate, /[-.:]/, '')}T060000Z`,\n    },\n  ];\n  if (designatedId !== null)\n    conditions.push({ 'x-amz-meta-uuid': designatedId });\n  const policy = {\n    expiration: `${expiryDate}T12:00:00.000Z`,\n    conditions: conditions,\n  };\n  return utils.encodeJSONtob64(policy);\n};\n\nconst createSignature = ({\n  secretKey,\n  time,\n  region,\n  service,\n  stringToSign,\n}) => {\n  const h1 = hmac('AWS4' + secretKey, toDate(time)); // date-key\n  const h2 = hmac(h1, region); // region-key\n  const h3 = hmac(h2, service); // service-key\n  const h4 = hmac(h3, 'aws4_request'); // signing-key\n  return hmac(h4, stringToSign, 'hex');\n};\n\nconst getS3UploadSignature = ({ region, policy, secretKey, expiryDate }) => {\n  return createSignature({\n    secretKey,\n    time: new Date(expiryDate),\n    stringToSign: policy,\n    service: 's3',\n    region,\n  });\n};\n\nexport { getS3UploadSignature, generatePolicy, getCredentials };\n","import * as auth from './auth';\nimport { replaceAll, toDate } from '../utils';\n\nconst doFileUpload = async ({\n  key,\n  fileObj,\n  bucket,\n  policy,\n  credentials,\n  signature,\n  expiryDate,\n  acl,\n}) => {\n  const API_URL = `https://${bucket}.s3.amazonaws.com`;\n\n  const payload = {\n    acl,\n    key: key,\n    'Content-Type': fileObj.type,\n    'x-amz-server-side-encryption': 'AES256',\n    'x-amz-credential': credentials,\n    'x-amz-algorithm': 'AWS4-HMAC-SHA256',\n    'x-amz-date': `${replaceAll(expiryDate, '-', '')}T060000Z`,\n    Policy: policy,\n    'x-amz-signature': signature,\n    file: fileObj,\n  };\n  const formData = new FormData();\n\n  for (const key in payload) {\n    formData.append(key, payload[key]);\n  }\n  return fetch(`${API_URL}`, {\n    method: 'POST',\n    'Content-Type': 'multipart/form-data',\n    body: formData,\n  });\n};\n\nconst uploadFile = async ({ fileObj, destination, keys }) => {\n  const { region, isPublic, bucket, prefix } = destination;\n  const { accessKey, secretKey } = keys;\n\n  const acl = isPublic ? 'public-read' : 'private';\n\n  const today = new Date();\n  const tomorrow = new Date();\n  tomorrow.setDate(today.getDate() + 1);\n  const expiryDate = toDate(tomorrow, false);\n\n  const credentials = auth.getCredentials({ region, accessKey, expiryDate });\n  const policy = auth.generatePolicy({\n    bucket,\n    credentials,\n    expiryDate,\n    prefix,\n  });\n\n  const signature = auth.getS3UploadSignature({\n    region,\n    policy,\n    secretKey,\n    expiryDate,\n  });\n  await doFileUpload({\n    key: `${prefix}${fileObj.path}`,\n    fileObj,\n    bucket,\n    policy,\n    acl,\n    credentials,\n    signature,\n    expiryDate,\n  });\n};\n\nexport { uploadFile };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst key = destination => `${destination.bucket}/${destination.prefix}`;\n\nconst Selector = styled.select`\n  margin-bottom: 30px;\n`;\n\nconst StorageSelector = ({ destinations, selectDestination }) => (\n  <Selector onChange={ev => selectDestination(ev.target.value)}>\n    {destinations.map(d => (\n      <option key={key(d)} value={key(d)}>\n        {key(d)}\n      </option>\n    ))}\n  </Selector>\n);\n\nexport { StorageSelector };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst InputWrapper = styled.div`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 3px;\n  display: block;\n`;\n\nconst KeyInput = ({ label, placeholder, currentValue, setKey }) => (\n  <InputWrapper>\n    <Label htmlFor=\"\">{label}</Label>\n    <input\n      type=\"text\"\n      value={currentValue}\n      placeholder={placeholder}\n      onChange={ev => setKey(ev.target.value)}\n    />\n  </InputWrapper>\n);\n\nexport { KeyInput };\n","import React from 'react';\n\nconst Destination = ({ destination }) =>\n  destination ? (\n    <p>\n      <span>Uploading to: </span>\n      <strong>\n        {destination.bucket}/{destination.prefix}\n      </strong>\n    </p>\n  ) : (\n    <p>No destination chosen</p>\n  );\n\nexport { Destination };\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Normalize } from 'styled-normalize';\n\nimport { FileDrop } from './components/FileDrop';\nimport { FileList } from './components/FileList';\nimport { uploadFile } from './lib/aws/s3';\nimport { StorageSelector } from './components/StorageSelector';\nimport { KeyInput } from './components/KeyInput';\nimport { getQueryParams } from './lib/utils';\nimport {Destination} from \"./components/Destination\";\n\nconst Body = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n  padding: 5px;\n`;\n\nconst Panel = styled.div`\n  margin: 10px 0;\n  padding: 20px;\n  background-color: #ece9e9;\n`;\n\nconst uploadSingleFile = async ({\n  fileObj,\n  destination,\n  accessKey,\n  secretKey,\n}) => {\n  if (!fileObj.uploaded) {\n    await uploadFile({ fileObj, destination, keys: { accessKey, secretKey } });\n    fileObj.uploaded = true;\n  }\n  return fileObj;\n};\n\nconst buildDestinationFromString = bucketString => {\n  const [bucket, prefix, isPublic, region] = bucketString.split(',');\n  if (!bucket) {\n    return null;\n  }\n  return {\n    bucket,\n    prefix: prefix || '',\n    isPublic: isPublic === 'true',\n    region: region || 'eu-central-1',\n  };\n};\n\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [destinations, setDestinations] = useState([]);\n  const [chosenDestination, setChosenDestination] = useState(\n    destinations.length > 0 ? destinations[0] : null,\n    [destinations],\n  );\n\n  const [accessKey, setAccessKey] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n\n  useEffect(() => {\n    const params = getQueryParams();\n    if (params['access-key']) {\n      setAccessKey(params['access-key']);\n    }\n    if (params['secret-key']) {\n      setSecretKey(params['secret-key']);\n    }\n    const buckets = params['buckets'] && params['buckets'].split(';');\n\n    if (buckets && buckets.length > 0) {\n      const parsedDestinations = buckets.map(buildDestinationFromString).filter(d => !!d)\n      setDestinations(parsedDestinations);\n      setChosenDestination(parsedDestinations[0])\n      console.log(parsedDestinations)\n    }\n  }, []);\n\n  const onDrop = async newFiles => {\n    const oldFiles = files;\n    setFiles([...oldFiles, ...newFiles]);\n    setLoading(true);\n    newFiles = await Promise.all(\n      newFiles.map(item =>\n        uploadSingleFile({\n          fileObj: item,\n          destination: chosenDestination,\n          accessKey,\n          secretKey,\n        }),\n      ),\n    );\n    setFiles([...oldFiles, ...newFiles]);\n    setLoading(false);\n  };\n\n  const onSelectDestination = bucketKey => {\n    const chosenDestination = destinations.find(\n      d => bucketKey === `${d.bucket}/${d.prefix}`,\n    );\n    setChosenDestination(chosenDestination);\n  };\n\n  return (\n    <Fragment>\n      <Normalize />\n      <Body className=\"App\">\n        <h1>Storage uploader</h1>\n        <Panel>\n          <KeyInput\n            label=\"Access key\"\n            placeholder=\"AKIA...\"\n            currentValue={accessKey}\n            setKey={setAccessKey}\n          />\n          <KeyInput\n            label=\"Secret key\"\n            placeholder=\"de01B...\"\n            currentValue={secretKey}\n            setKey={setSecretKey}\n          />\n        </Panel>\n        <Destination destination={chosenDestination} />\n        <StorageSelector\n          destinations={destinations}\n          selectDestination={onSelectDestination}\n        />\n        <FileDrop setFiles={onDrop} />\n        <FileList files={files} loading={loading} />\n      </Body>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}